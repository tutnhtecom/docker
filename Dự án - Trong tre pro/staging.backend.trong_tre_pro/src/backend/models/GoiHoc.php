<?php

namespace backend\models;

use Yii;

/**
 * This is the model class for table "trong_tre_goi_hoc".
 *
 * @property int $id
 * @property int|null $active
 * @property string|null $created
 * @property string|null $updated
 * @property int $user_id
 * @property int|null $nhom_id
 * @property string|null $tieu_de
 * @property int $chuong_trinh_id
 * @property string $giao_cu_id
 *
 * @property DanhMuc $nhom
 */
class GoiHoc extends \yii\db\ActiveRecord
{
  /**
   * {@inheritdoc}
   */
  public static function tableName()
  {
    return 'trong_tre_goi_hoc';
  }

  /**
   * {@inheritdoc}
   */
  public function rules()
  {
    return [
      [['active', 'user_id', 'nhom_id', 'chuong_trinh_id'], 'integer'],
      [['created', 'updated'], 'safe'],
      [['user_id', 'chuong_trinh_id'], 'required'],
      [['tieu_de'], 'string'],
      [['nhom_id'], 'exist', 'skipOnError' => true, 'targetClass' => DanhMuc::className(), 'targetAttribute' => ['nhom_id' => 'id']],
    ];
  }

  /**
   * {@inheritdoc}
   */
  public function attributeLabels()
  {
    return [
      'id' => 'ID',
      'active' => 'Active',
      'created' => 'Created',
      'updated' => 'Updated',
      'user_id' => 'User ID',
      'nhom_id' => 'Nhom ID',
      'tieu_de' => 'Tieu De',
      'chuong_trinh_id' => 'Chuong Trinh ID',
      'giao_cu_id' => 'Giao Cu ID',
    ];
  }

  /**
   * Gets query for [[Nhom]].
   *
   * @return \yii\db\ActiveQuery
   */
  public function getNhom()
  {
    return $this->hasOne(DanhMuc::className(), ['id' => 'nhom_id']);
  }

  public function beforeSave($insert)
  {
    if ($insert) {
      $this->created = date('Y-m-d H:i:s');
    }
    $this->updated = date('Y-m-d H:i:s');

    return parent::beforeSave($insert); // TODO: Change the autogenerated stub
  }

  public function getBuoiHoc()
  {
    return KeHoachDay::find()
      ->select(['buoi', 'id', 'noi_dung'])
      ->andFilterWhere(['active' => 1, 'goi_hoc_id' => $this->id])->orderBy(['buoi' => SORT_ASC])->all();
  }

  public  function getGiaoCu()
  {
    $data = [];
    if (!is_null($this->giao_cu_id)) {
      $giaoCus = explode(',', $this->giao_cu_id);
      if (count($giaoCus) > 0) {
        foreach ($giaoCus as $item) {
          $giaoCu = GiaoCu::findOne($item);
          $data[] = [
            'id' => $giaoCu->id,
            'code' => $giaoCu->code,
            'image' => CauHinh::getImage($giaoCu->image),
          ];
        }
      }
    }
    return $data;
  }
}
