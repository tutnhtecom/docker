<?php

namespace backend\models;

use common\models\User;
use Yii;
use yii\helpers\Html;
use yii\web\HttpException;

/**
 * This is the model class for table "trong_tre_ket_qua_dao_tao".
 *
 * @property int $id
 * @property int|null $active
 * @property string|null $created
 * @property string|null $updated
 * @property int|null $user_id
 * @property int $giao_vien_id
 * @property int $bai_hoc_id
 * @property string|null $trang_thai
 * @property string|null $link
 * @property string|null $ghi_chu
 *
 * @property User $giaoVien
 * @property User $user
 * @property BaiHoc $baiHoc
 */
class KetQuaDaoTao extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'trong_tre_ket_qua_dao_tao';
    }

    const DANG_CHO_DUYET = 'Đang chờ duyệt';
    const DAT = 'Đạt';
    const CHUA_DAT = 'Chưa đạt';
    const HOC_LAI = 'Học lại';

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['giao_vien_id', 'bai_hoc_id'], 'required'],
            [['id', 'active', 'user_id', 'giao_vien_id', 'bai_hoc_id'], 'integer'],
            [['created', 'updated'], 'safe'],
            [['trang_thai', 'ghi_chu'], 'string'],
            [['giao_vien_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['giao_vien_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
            [['bai_hoc_id'], 'exist', 'skipOnError' => true, 'targetClass' => BaiHoc::className(), 'targetAttribute' => ['bai_hoc_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'active' => 'Active',
            'created' => 'Created',
            'updated' => 'Updated',
            'user_id' => 'User ID',
            'giao_vien_id' => 'Giao Vien ID',
            'bai_hoc_id' => 'Bai Hoc ID',
            'trang_thai' => 'Trang Thai',
            'ghi_chu' => 'Ghi Chu',
        ];
    }

    /**
     * Gets query for [[GiaoVien]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getGiaoVien()
    {
        return $this->hasOne(User::className(), ['id' => 'giao_vien_id']);
    }

    /**
     * Gets query for [[User]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    /**
     * Gets query for [[BaiHoc]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getBaiHoc()
    {
        return $this->hasOne(BaiHoc::className(), ['id' => 'bai_hoc_id']);
    }

    public function getTrangThai()
    {
        $arr = [
            self::DANG_CHO_DUYET => 79,
            self::DAT => 80,
            self::CHUA_DAT => 81,
            self::HOC_LAI => 103,
        ];
        return [
            'id' => $arr[$this->trang_thai],
            'name' => $this->trang_thai
        ];
    }
    public function beforeSave($insert)
    {
        if ($insert){
            $this->created =date('Y-m-d H:i:s');
        }
        $this->updated =date('Y-m-d H:i:s');

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    public function afterSave($insert, $changedAttributes)
    {
        if (!is_null($this->trang_thai)) {
            $trangThai = new LichSuKetQuaDaoTao();
            $trangThai->trang_thai= $this->trang_thai;
            $trangThai->user_id= $this->user_id;
            $trangThai->ket_qua_id= $this->id;
            $trangThai->giao_vien_id= $this->giao_vien_id;
            $trangThai->link= $this->link;
            $trangThai->ghi_chu = $this->ghi_chu;
            if (!$trangThai->save()){
                throw new HttpException(500,Html::errorSummary($trangThai));
            }
            if ($this->trang_thai==self::DAT){
                $tongBaiHoc = $this->baiHoc->hocPhan->getTongBaiHoc();
                $tongBaiDaHoanThanh = $this->baiHoc->hocPhan->getTongBaiHocDaHoanThanh($this->giao_vien_id);
                $hoanThanh = HoanThanhDaoTao::find()
                    ->andFilterWhere(['giao_vien_id'=>$this->giao_vien_id,'hoc_phan_id'=>$this->baiHoc->hoc_phan_id,'active'=>1])->one();
                if (is_null($hoanThanh)){
                    $hoanThanh =  new HoanThanhDaoTao();
                }
                $hoanThanh->user_id = $this->giao_vien_id;
                $hoanThanh->giao_vien_id = $this->giao_vien_id;
                $hoanThanh->hoc_phan_id = $this->baiHoc->hoc_phan_id;
                $hoanThanh->tong_bai_hoc = $tongBaiHoc;
                $hoanThanh->tong_bai_da_hoan_thanh = $tongBaiDaHoanThanh;
                if ($tongBaiHoc==$tongBaiDaHoanThanh&&$tongBaiHoc>0){
                    $hoanThanh->trang_thai = HoanThanhDaoTao::DA_HOAN_THANH;
                }else{
                    $hoanThanh->trang_thai = HoanThanhDaoTao::CHUA_HOAN_THANH;
                }
                if (!$hoanThanh->save()){
                    throw new HttpException(500,Html::errorSummary($hoanThanh));
                }
            }
        }

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}
